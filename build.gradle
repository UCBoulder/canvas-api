plugins {
    id "java-library"
    alias(libs.plugins.reckon)
    alias(libs.plugins.ben.manes.versions)
    alias(libs.plugins.sweng.publication)
    alias(libs.plugins.version.catalog.update)
}

reckon {
    scopeFromProp()
    snapshotFromProp()
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
        vendor = JvmVendorSpec.ADOPTIUM
    }
}

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

test {
    useJUnitPlatform()
    testLogging {
        events "failed", "skipped"
        showStackTraces true
        exceptionFormat "full"
        showStandardStreams false

        debug {
            showStandardStreams true
        }
    }
    // For Mockito wanting to instrument classes that it doesn't have direct access to
    // See https://stackoverflow.com/a/70441435 for details
    jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED'
}

dependencies {
    implementation(libs.validation.api)
    implementation(libs.gson)
    implementation(libs.commons.lang3)
    implementation(libs.guava)
    implementation(libs.slf4j.api)
    implementation(libs.slf4j.simple)
    implementation(libs.httpclient)
    implementation(libs.httpmime)
    testImplementation(libs.junit.jupiter)
    testImplementation(libs.httpclient) { artifact { classifier = 'tests' } }
    testImplementation(libs.spring.beans)
    testImplementation(libs.spring.context)
    testImplementation(libs.spring.test)
    testImplementation(libs.mockito.core)
    testImplementation(libs.mockito.junit.jupiter)
    testImplementation(libs.hamcrest)
}

group = "edu.ksu.canvas"
description = "Canvas API Library"

